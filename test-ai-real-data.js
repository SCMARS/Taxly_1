// –¢–µ—Å—Ç AI —Å–µ—Ä–≤–∏—Å–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
// –ó–∞–ø—É—Å–∫: node test-ai-real-data.js

const { BusinessDataService } = require('./src/services/businessDataService');
const { AIService } = require('./src/services/aiService');

async function testAIServiceWithRealData() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º AI —Å–µ—Ä–≤–∏—Å —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...\n');
    
    // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ
    console.log('1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ...');
    await BusinessDataService.initializeWithDemoData();
    console.log('‚úÖ –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã\n');
    
    // 2. –ü–æ–ª—É—á–∞–µ–º –±–∏–∑–Ω–µ—Å –º–µ—Ç—Ä–∏–∫–∏
    console.log('2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –±–∏–∑–Ω–µ—Å –º–µ—Ç—Ä–∏–∫–∏...');
    const metrics = await BusinessDataService.getBusinessMetrics();
    console.log('üìä –ú–µ—Ç—Ä–∏–∫–∏:', {
      revenue: metrics.revenue,
      profit: metrics.profit,
      ordersCount: metrics.ordersCount,
      expenses: metrics.expenses
    });
    console.log('');
    
    // 3. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
    console.log('3Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤...');
    const marketplace = await BusinessDataService.getMarketplacePerformance();
    console.log('üõí –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã:', marketplace.length);
    marketplace.forEach(mp => {
      console.log(`   - ${mp.name}: ${mp.revenue} –≥—Ä–Ω, ${mp.orders} –∑–∞–∫–∞–∑–æ–≤`);
    });
    console.log('');
    
    // 4. –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—ã
    console.log('4Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—ã...');
    const orders = await BusinessDataService.getOrders();
    console.log('üì¶ –ó–∞–∫–∞–∑–æ–≤:', orders.length);
    orders.slice(0, 3).forEach(order => {
      console.log(`   - ${order.date}: ${order.amount} –≥—Ä–Ω, ${order.marketplace}`);
    });
    console.log('');
    
    // 5. –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—Ö–æ–¥—ã
    console.log('5Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—Ö–æ–¥—ã...');
    const expenses = await BusinessDataService.getExpenses();
    console.log('üí∞ –†–∞—Å—Ö–æ–¥–æ–≤:', expenses.length);
    expenses.forEach(exp => {
      console.log(`   - ${exp.category}: ${exp.amount} –≥—Ä–Ω`);
    });
    console.log('');
    
    // 6. –ü–æ–ª—É—á–∞–µ–º –Ω–∞–ª–æ–≥–∏
    console.log('6Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –Ω–∞–ª–æ–≥–∏...');
    const taxes = await BusinessDataService.getTaxes();
    console.log('üèõÔ∏è –ù–∞–ª–æ–≥–æ–≤:', taxes.length);
    taxes.forEach(tax => {
      console.log(`   - ${tax.type} –∑–∞ ${tax.period}: ${tax.amount} –≥—Ä–Ω`);
    });
    console.log('');
    
    // 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('7Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...');
    const recommendations = await AIService.getBusinessRecommendations();
    console.log('ü§ñ AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:', recommendations.length);
    recommendations.forEach((rec, index) => {
      console.log(`   ${index + 1}. ${rec.title} (${rec.priority})`);
      console.log(`      ${rec.description.substring(0, 100)}...`);
    });
    console.log('');
    
    // 8. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
    console.log('8Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑...');
    const analysis = await AIService.analyzeFinancialMetrics();
    console.log('üìà –ê–Ω–∞–ª–∏–∑:', analysis.substring(0, 200) + '...');
    console.log('');
    
    // 9. –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–ª–æ–≥–æ–≤–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    console.log('9Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–ª–æ–≥–æ–≤–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...');
    const taxPlan = await AIService.planTaxes();
    console.log('üíº –ù–∞–ª–æ–≥–æ–≤–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:', taxPlan.substring(0, 200) + '...');
    console.log('');
    
    // 10. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞
    console.log('üîü –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞...');
    const marketAnalysis = await AIService.analyzeMarket();
    console.log('üåç –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞:', marketAnalysis.substring(0, 200) + '...');
    console.log('');
    
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('AI —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testAIServiceWithRealData(); 